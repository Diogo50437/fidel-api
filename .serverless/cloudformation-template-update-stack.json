{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "SeedOffersLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/offers-api-dev-seedOffers"
      }
    },
    "SeedLocationsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/offers-api-dev-seedLocations"
      }
    },
    "LinkLocationToOfferLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/offers-api-dev-linkLocationToOffer"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "offers-api",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:eu-west-1:*:table/OffersTable",
                    "arn:aws:dynamodb:eu-west-1:*:table/LocationsTable"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "offers-api",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SeedOffersLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
          "S3Key": "serverless/offers-api/dev/1752675437824-2025-07-16T14:17:17.824Z/offers-api.zip"
        },
        "Handler": "src/handlers/offers_handler.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "offers-api-dev-seedOffers",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "OFFERS_TABLE": "OffersTable",
            "LOCATIONS_TABLE": "LocationsTable",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SeedOffersLogGroup"
      ]
    },
    "SeedLocationsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
          "S3Key": "serverless/offers-api/dev/1752675437824-2025-07-16T14:17:17.824Z/offers-api.zip"
        },
        "Handler": "src/handlers/locations_handler.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "offers-api-dev-seedLocations",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "OFFERS_TABLE": "OffersTable",
            "LOCATIONS_TABLE": "LocationsTable",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SeedLocationsLogGroup"
      ]
    },
    "LinkLocationToOfferLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
          "S3Key": "serverless/offers-api/dev/1752675437824-2025-07-16T14:17:17.824Z/offers-api.zip"
        },
        "Handler": "src/handlers/linking_handler.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "offers-api-dev-linkLocationToOffer",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "OFFERS_TABLE": "OffersTable",
            "LOCATIONS_TABLE": "LocationsTable",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LinkLocationToOfferLogGroup"
      ]
    },
    "SeedOffersLambdaVersionQjlprFG176k16oVCtNeHl6bkewajhbVhfuVbMKQKQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SeedOffersLambdaFunction"
        },
        "CodeSha256": "Nejo58ca8AO+FB7tcvoV3FTcQvdAmjUgAw22V3D0ek4="
      }
    },
    "SeedLocationsLambdaVersionxUWFDleS6yFTaofKVGIdW56Qmuj2f2bswKGSEtqSldc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SeedLocationsLambdaFunction"
        },
        "CodeSha256": "Nejo58ca8AO+FB7tcvoV3FTcQvdAmjUgAw22V3D0ek4="
      }
    },
    "LinkLocationToOfferLambdaVersion1gX6YLIGLs9w4KV4Ugv2YgHMywECSKYYQ7EDkfYb85M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LinkLocationToOfferLambdaFunction"
        },
        "CodeSha256": "Nejo58ca8AO+FB7tcvoV3FTcQvdAmjUgAw22V3D0ek4="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-offers-api",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceOffers": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "offers",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceOffersUpdate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceOffers"
        },
        "PathPart": "update",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodOffersUpdateOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceOffersUpdate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodOffersUpdatePut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceOffersUpdate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LinkLocationToOfferLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "LinkLocationToOfferLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1752675433044": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodOffersUpdateOptions",
        "ApiGatewayMethodOffersUpdatePut"
      ]
    },
    "LinkLocationToOfferLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LinkLocationToOfferLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "OffersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "OffersTable",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ]
      }
    },
    "LocationsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "LocationsTable",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
      "Export": {
        "Name": "sls-offers-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "SeedOffersLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SeedOffersLambdaVersionQjlprFG176k16oVCtNeHl6bkewajhbVhfuVbMKQKQ"
      },
      "Export": {
        "Name": "sls-offers-api-dev-SeedOffersLambdaFunctionQualifiedArn"
      }
    },
    "SeedLocationsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SeedLocationsLambdaVersionxUWFDleS6yFTaofKVGIdW56Qmuj2f2bswKGSEtqSldc"
      },
      "Export": {
        "Name": "sls-offers-api-dev-SeedLocationsLambdaFunctionQualifiedArn"
      }
    },
    "LinkLocationToOfferLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LinkLocationToOfferLambdaVersion1gX6YLIGLs9w4KV4Ugv2YgHMywECSKYYQ7EDkfYb85M"
      },
      "Export": {
        "Name": "sls-offers-api-dev-LinkLocationToOfferLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-offers-api-dev-ServiceEndpoint"
      }
    }
  }
}