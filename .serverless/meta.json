{
  "/Users/diogo.lobo/Desktop/My Stuff/Fidel Challenge/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/Users/diogo.lobo/Desktop/My Stuff/Fidel Challenge/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "offers-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-west-1",
        "environment": {
          "OFFERS_TABLE": "OffersTable",
          "LOCATIONS_TABLE": "LocationsTable"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem"
                ],
                "Resource": [
                  "arn:aws:dynamodb:eu-west-1:*:table/OffersTable",
                  "arn:aws:dynamodb:eu-west-1:*:table/LocationsTable"
                ]
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "SeedOffersLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/offers-api-dev-seedOffers"
              }
            },
            "SeedLocationsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/offers-api-dev-seedLocations"
              }
            },
            "LinkLocationToOfferLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/offers-api-dev-linkLocationToOffer"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "offers-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:eu-west-1:*:table/OffersTable",
                            "arn:aws:dynamodb:eu-west-1:*:table/LocationsTable"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "offers-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "SeedOffersLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
                  "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
                },
                "Handler": "src/handlers/offers_handler.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "offers-api-dev-seedOffers",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "OFFERS_TABLE": "OffersTable",
                    "LOCATIONS_TABLE": "LocationsTable",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SeedOffersLogGroup"
              ]
            },
            "SeedLocationsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
                  "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
                },
                "Handler": "src/handlers/locations_handler.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "offers-api-dev-seedLocations",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "OFFERS_TABLE": "OffersTable",
                    "LOCATIONS_TABLE": "LocationsTable",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SeedLocationsLogGroup"
              ]
            },
            "LinkLocationToOfferLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
                  "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
                },
                "Handler": "src/handlers/linking_handler.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "offers-api-dev-linkLocationToOffer",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "OFFERS_TABLE": "OffersTable",
                    "LOCATIONS_TABLE": "LocationsTable",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "LinkLocationToOfferLogGroup"
              ]
            },
            "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SeedOffersLambdaFunction"
                },
                "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
              }
            },
            "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SeedLocationsLambdaFunction"
                },
                "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
              }
            },
            "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LinkLocationToOfferLambdaFunction"
                },
                "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-offers-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceOffers": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "offers",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceOffersUpdate": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceOffers"
                },
                "PathPart": "update",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodOffersUpdateOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceOffersUpdate"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodOffersUpdatePut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceOffersUpdate"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LinkLocationToOfferLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LinkLocationToOfferLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1752619708177": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodOffersUpdateOptions",
                "ApiGatewayMethodOffersUpdatePut"
              ]
            },
            "LinkLocationToOfferLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LinkLocationToOfferLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "OffersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "OffersTable",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ]
              }
            },
            "LocationsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "LocationsTable",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
              "Export": {
                "Name": "sls-offers-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "SeedOffersLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE"
              },
              "Export": {
                "Name": "sls-offers-api-dev-SeedOffersLambdaFunctionQualifiedArn"
              }
            },
            "SeedLocationsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk"
              },
              "Export": {
                "Name": "sls-offers-api-dev-SeedLocationsLambdaFunctionQualifiedArn"
              }
            },
            "LinkLocationToOfferLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8"
              },
              "Export": {
                "Name": "sls-offers-api-dev-LinkLocationToOfferLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-offers-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "resources": {
        "Resources": {
          "OffersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "OffersTable",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "LocationsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "LocationsTable",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {}
      },
      "functions": {
        "seedOffers": {
          "handler": "src/handlers/offers_handler.handler",
          "events": [],
          "name": "offers-api-dev-seedOffers",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE"
        },
        "seedLocations": {
          "handler": "src/handlers/locations_handler.handler",
          "events": [],
          "name": "offers-api-dev-seedLocations",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk"
        },
        "linkLocationToOffer": {
          "handler": "src/handlers/linking_handler.handler",
          "events": [
            {
              "http": {
                "path": "offers/update",
                "method": "put",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "PUT"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "offers-api-dev-linkLocationToOffer",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-west-1",
      "environment": {
        "OFFERS_TABLE": "OffersTable",
        "LOCATIONS_TABLE": "LocationsTable"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem"
              ],
              "Resource": [
                "arn:aws:dynamodb:eu-west-1:*:table/OffersTable",
                "arn:aws:dynamodb:eu-west-1:*:table/LocationsTable"
              ]
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SeedOffersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/offers-api-dev-seedOffers"
            }
          },
          "SeedLocationsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/offers-api-dev-seedLocations"
            }
          },
          "LinkLocationToOfferLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/offers-api-dev-linkLocationToOffer"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "offers-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:eu-west-1:*:table/OffersTable",
                          "arn:aws:dynamodb:eu-west-1:*:table/LocationsTable"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "offers-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SeedOffersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
                "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
              },
              "Handler": "src/handlers/offers_handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "offers-api-dev-seedOffers",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "OFFERS_TABLE": "OffersTable",
                  "LOCATIONS_TABLE": "LocationsTable",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SeedOffersLogGroup"
            ]
          },
          "SeedLocationsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
                "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
              },
              "Handler": "src/handlers/locations_handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "offers-api-dev-seedLocations",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "OFFERS_TABLE": "OffersTable",
                  "LOCATIONS_TABLE": "LocationsTable",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SeedLocationsLogGroup"
            ]
          },
          "LinkLocationToOfferLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
                "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
              },
              "Handler": "src/handlers/linking_handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "offers-api-dev-linkLocationToOffer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "OFFERS_TABLE": "OffersTable",
                  "LOCATIONS_TABLE": "LocationsTable",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LinkLocationToOfferLogGroup"
            ]
          },
          "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SeedOffersLambdaFunction"
              },
              "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
            }
          },
          "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SeedLocationsLambdaFunction"
              },
              "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
            }
          },
          "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LinkLocationToOfferLambdaFunction"
              },
              "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-offers-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceOffers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "offers",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOffersUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOffers"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOffersUpdateOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceOffersUpdate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOffersUpdatePut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOffersUpdate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LinkLocationToOfferLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LinkLocationToOfferLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1752619708177": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodOffersUpdateOptions",
              "ApiGatewayMethodOffersUpdatePut"
            ]
          },
          "LinkLocationToOfferLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LinkLocationToOfferLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OffersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "OffersTable",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "LocationsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "LocationsTable",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
            "Export": {
              "Name": "sls-offers-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "SeedOffersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE"
            },
            "Export": {
              "Name": "sls-offers-api-dev-SeedOffersLambdaFunctionQualifiedArn"
            }
          },
          "SeedLocationsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk"
            },
            "Export": {
              "Name": "sls-offers-api-dev-SeedLocationsLambdaFunctionQualifiedArn"
            }
          },
          "LinkLocationToOfferLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8"
            },
            "Export": {
              "Name": "sls-offers-api-dev-LinkLocationToOfferLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-offers-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: offers-api\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: eu-west-1\n  environment:\n    OFFERS_TABLE: OffersTable\n    LOCATIONS_TABLE: LocationsTable\n  iam:\n    role:\n        statements:\n          - Effect: Allow\n            Action:\n              - dynamodb:PutItem\n              - dynamodb:UpdateItem\n            Resource:\n              - arn:aws:dynamodb:eu-west-1:*:table/OffersTable\n              - arn:aws:dynamodb:eu-west-1:*:table/LocationsTable\n\nresources:\n  Resources:\n    OffersTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: OffersTable\n        BillingMode: PAY_PER_REQUEST\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n\n    LocationsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: LocationsTable\n        BillingMode: PAY_PER_REQUEST\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n\nfunctions:\n  seedOffers:\n    handler: src/handlers/offers_handler.handler\n\n  seedLocations:\n    handler: src/handlers/locations_handler.handler\n\n  linkLocationToOffer:\n    handler: src/handlers/linking_handler.handler\n    events:\n      - http:\n          path: offers/update\n          method: put\n          cors: true",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "98dd8892-c87b-4aa6-95a1-4f5feb91e915",
    "orgName": "diogolobo",
    "userId": "hbGYWcC5m6xYXHN3hx",
    "userName": "diogolobo",
    "serviceProviderAwsAccountId": "008119085952",
    "serviceProviderAwsCfStackName": "offers-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-west-1:008119085952:stack/offers-api-dev/970a1d30-60cd-11f0-81a4-0ac07a182669",
    "serviceProviderAwsCfStackCreated": "2025-07-14T16:14:17.012Z",
    "serviceProviderAwsCfStackUpdated": "2025-07-15T22:28:17.740Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "LinkLocationToOfferLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:008119085952:function:offers-api-dev-linkLocationToOffer:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-offers-api-dev-LinkLocationToOfferLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SeedOffersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:008119085952:function:offers-api-dev-seedOffers:11",
        "Description": "Current Lambda function version",
        "ExportName": "sls-offers-api-dev-SeedOffersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SeedLocationsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:008119085952:function:offers-api-dev-seedLocations:11",
        "Description": "Current Lambda function version",
        "ExportName": "sls-offers-api-dev-SeedLocationsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://4nce5hmggf.execute-api.eu-west-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-offers-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
        "ExportName": "sls-offers-api-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "SeedOffersLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/offers-api-dev-seedOffers"
          }
        },
        "SeedLocationsLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/offers-api-dev-seedLocations"
          }
        },
        "LinkLocationToOfferLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/offers-api-dev-linkLocationToOffer"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "offers-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/offers-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:eu-west-1:*:table/OffersTable",
                        "arn:aws:dynamodb:eu-west-1:*:table/LocationsTable"
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "offers-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "SeedOffersLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
              "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
            },
            "Handler": "src/handlers/offers_handler.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "offers-api-dev-seedOffers",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "OFFERS_TABLE": "OffersTable",
                "LOCATIONS_TABLE": "LocationsTable",
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SeedOffersLogGroup"
          ]
        },
        "SeedLocationsLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
              "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
            },
            "Handler": "src/handlers/locations_handler.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "offers-api-dev-seedLocations",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "OFFERS_TABLE": "OffersTable",
                "LOCATIONS_TABLE": "LocationsTable",
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SeedLocationsLogGroup"
          ]
        },
        "LinkLocationToOfferLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
              "S3Key": "serverless/offers-api/dev/1752619713887-2025-07-15T22:48:33.887Z/offers-api.zip"
            },
            "Handler": "src/handlers/linking_handler.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "offers-api-dev-linkLocationToOffer",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "OFFERS_TABLE": "OffersTable",
                "LOCATIONS_TABLE": "LocationsTable",
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "LinkLocationToOfferLogGroup"
          ]
        },
        "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SeedOffersLambdaFunction"
            },
            "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
          }
        },
        "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SeedLocationsLambdaFunction"
            },
            "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
          }
        },
        "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "LinkLocationToOfferLambdaFunction"
            },
            "CodeSha256": "5KDT3/7fg+7Avtxl5WUgdpXg9FkGBrdO6u3DWxURJoc="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-offers-api",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceOffers": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "offers",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceOffersUpdate": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceOffers"
            },
            "PathPart": "update",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodOffersUpdateOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceOffersUpdate"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodOffersUpdatePut": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PUT",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceOffersUpdate"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "LinkLocationToOfferLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "LinkLocationToOfferLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1752619708177": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodOffersUpdateOptions",
            "ApiGatewayMethodOffersUpdatePut"
          ]
        },
        "LinkLocationToOfferLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "LinkLocationToOfferLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "OffersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "OffersTable",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "LocationsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "LocationsTable",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-eu-west-1-40b328c9-4877",
          "Export": {
            "Name": "sls-offers-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "SeedOffersLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SeedOffersLambdaVersioneuqqctaeCmqw6Ar8csHjoZChfzfO2x8RdPIDmIukE"
          },
          "Export": {
            "Name": "sls-offers-api-dev-SeedOffersLambdaFunctionQualifiedArn"
          }
        },
        "SeedLocationsLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SeedLocationsLambdaVersionszCCdcSGyCZ3f5sZhnowmrYLbqT1rqT6bVHfcucROPk"
          },
          "Export": {
            "Name": "sls-offers-api-dev-SeedLocationsLambdaFunctionQualifiedArn"
          }
        },
        "LinkLocationToOfferLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "LinkLocationToOfferLambdaVersionnzHQUBVVnDF92LwqZWLRwmH9m4WKTg9o3ktt1hGnv8"
          },
          "Export": {
            "Name": "sls-offers-api-dev-LinkLocationToOfferLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-offers-api-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}